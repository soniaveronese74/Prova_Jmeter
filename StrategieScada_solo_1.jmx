<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan-Strategie" enabled="true">
      <stringProp name="TestPlan.comments">Strategie</stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="System_variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="basicUrl" elementType="Argument">
            <stringProp name="Argument.name">basicUrl</stringProp>
            <stringProp name="Argument.value">10.166.10.104</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="id_galleria" elementType="Argument">
            <stringProp name="Argument.name">id_galleria</stringProp>
            <stringProp name="Argument.value">049</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="canna_evento" elementType="Argument">
            <stringProp name="Argument.name">canna_evento</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="km_inizio" elementType="Argument">
            <stringProp name="Argument.name">km_inizio</stringProp>
            <stringProp name="Argument.value">89,794</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="km_fine" elementType="Argument">
            <stringProp name="Argument.name">km_fine</stringProp>
            <stringProp name="Argument.value">91,674</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="linkSCADA" elementType="Argument">
            <stringProp name="Argument.name">linkSCADA</stringProp>
            <stringProp name="Argument.value">ScadaATCN.Api</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">valore preso da url json ATS Montezemolo Sincro test postman collector</stringProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group_Strategie_ScadaNo_Allarmi_ordinaria" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Strategie_Scada_No_Allarmi_Ordinaria_Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
        {&#xd;
                &quot;ID_GALLERIA&quot;: &quot;${id_galleria}&quot;,&#xd;
                &quot;CANNA_EVENTO&quot;: &quot;${canna_evento}&quot;,&#xd;
                &quot;STRATEGIA_SINCRO&quot;: 8,&#xd;
                &quot;STRATEGIA_SCADA&quot;: 8,&#xd;
                &quot;DATA_STRATEGIA&quot;: &quot;${__time(yyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;)}&quot;,&#xd;
                &quot;EVENTO_CRITICO&quot;: &quot;O-A1&quot;,&#xd;
                &quot;FORZATURA_SCADA&quot;: &quot;0&quot;,&#xd;
                &quot;KM_INIZIO&quot;:&quot;${km_inizio}&quot;,&#xd;
                &quot;KM_FINE&quot;: &quot;${km_fine}&quot;,&#xd;
                &quot;DESCRIZIONE&quot;: &quot;&quot;,&#xd;
                &quot;Impianti&quot;: [&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 1,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 2,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 3,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 4,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 5,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 6,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 7,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        },&#xd;
                        {&#xd;
                                &quot;TIPO_IMPIANTO&quot;: 8,&#xd;
                                &quot;STRATEGIA&quot;: 8&#xd;
                        }&#xd;
                ]&#xd;
        }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${basicUrl}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/${linkSCADA}/api/StrategieScada/Post</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Strategie_Scada_No_Allarmi_Ordinaria corrispondente al json di Serra</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response_Assertion_OK" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="TestPlan.comments">Verifico che risponda 200 - OK</stringProp>
            <stringProp name="Assertion.custom_message">200</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion_message" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="TestPlan.comments">Verifico che diale resnponse corretta</stringProp>
            <stringProp name="Assertion.custom_message">[
        {
                &quot;ID_GALLERIA&quot;: &quot;${id_galleria}&quot;,
                &quot;CANNA_EVENTO&quot;: &quot;${canna_evento}&quot;,
                &quot;STRATEGIA_SINCRO&quot;: 8,
                &quot;STRATEGIA_SCADA&quot;: 8,
                &quot;DATA_STRATEGIA&quot;: &quot;${__time(yyy-MM-dd&apos;T&apos;HH:mm:ss&apos;.000Z&apos;)}&quot;,
                &quot;EVENTO_CRITICO&quot;: &quot;O-A1&quot;,
                &quot;FORZATURA_SCADA&quot;: &quot;0&quot;,
                &quot;KM_INIZIO&quot;:&quot;${km_inizio}&quot;,
                &quot;KM_FINE&quot;: &quot;${km_fine}&quot;,
                &quot;DESCRIZIONE&quot;: &quot;&quot;,
                &quot;Impianti&quot;: [
                        {
                                &quot;TIPO_IMPIANTO&quot;: 1,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 2,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 3,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 4,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 5,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 6,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 7,
                                &quot;STRATEGIA&quot;: 8
                        },
                        {
                                &quot;TIPO_IMPIANTO&quot;: 8,
                                &quot;STRATEGIA&quot;: 8
                        }
                ]
        }
]</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree 1" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table_1" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\veroneses\Downloads\apache_jmeter\apache-jmeter-5.4.1\bin\Get_Set_Results_1.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table_All_results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\veroneses\Downloads\Tabella_results_Strategie.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
